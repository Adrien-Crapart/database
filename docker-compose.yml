volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  redisinsight-data:
    driver: local
  mysql-data:
    driver: local
  mongodb-data:
    driver: local

networks:
  network-system:
    driver: bridge

services:

  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-password}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 10
    volumes:
      - redis-data:/var/lib/redis/
    ports:
      - "6379:6379"
    networks:
      - network-system

  redisinsight:
    container_name: redis-insight
    image: redislabs/redisinsight:latest
    volumes:
      - redisinsight-data:/var/lib/redisinsight/
    ports:
      - "8001:8001"
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - network-system

  postgres:
    container_name: postgres
    image: postgis/postgis:16-master
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-data}
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U admin -h localhost
      interval: 300s
      timeout: 5s
      retries: 10
    networks:
      - network-system
  
  pgbouncer:
    container_name: pgbouncer
    image: edoburu/pgbouncer:1.15.0
    restart: always
    depends_on:
      - postgres
    ports:
      - "6432:6432"
    environment:
      - AUTH_FILE=${AUTH_FILE:-/etc/pgbouncer/userlist.txt}
      - AUTH_TYPE=${AUTH_TYPE:-md5}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-data}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - POOL_MODE=${POOL_MODE:-transaction}
      - MAX_CLIENT_CONN=${MAX_CLIENT_CONN:-100}
      - DEFAULT_POOL_SIZE=${DEFAULT_POOL_SIZE:-20}
      - MIN_POOL_SIZE=${MIN_POOL_SIZE:-5}
      - RESERVE_POOL_SIZE=${RESERVE_POOL_SIZE:-5}
      - RESERVE_POOL_TIMEOUT=${RESERVE_POOL_TIMEOUT:-5}
      - SERVER_RESET_QUERY=${SERVER_RESET_QUERY:-DISCARD ALL}
      - SERVER_CHECK_DELAY=${SERVER_CHECK_DELAY:-30}
    volumes:
      - ./pgbouncer/userlist.txt:${AUTH_FILE:-/etc/pgbouncer/userlist.txt}
    networks:
      - network-system

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - mongodb-data:/data/configdb
    networks:
      - network-system

